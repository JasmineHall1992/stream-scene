name: Deploy to EC2 (Development)

on:
  push:
    branches: [ main ]  # Deploy when pushing to main or typescript-deployment-branch
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24.5.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: |
        npm run build

    - name: Test SSH Connection
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "SSH connection successful!"
          whoami
          pwd
          ls -la

    - name: Deploy to EC2 (Development Mode)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Navigate to app directory
          cd /home/ubuntu
          
          # Clone or update repository from upstream Project Vision
          if [ ! -d "stream-scene" ]; then
            git clone https://github.com/Project-Visi0n/stream-scene.git
            cd stream-scene
            git checkout main
          else
            cd stream-scene
            git fetch upstream
            git checkout main
            git pull upstream main
          fi
          
          # Install dependencies
          npm ci
          
          # Build with increased memory
          NODE_OPTIONS="--max-old-space-size=2048" npm run build
          
          # Create environment file if it doesn't exist
          if [ ! -f ".env" ]; then
            cat > .env << EOF
          PORT=8000
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=http://${{ secrets.EC2_HOST }}:8000/auth/google/callback
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
          EOF
          fi
          
          # Install PM2 globally if not installed
          sudo npm install -g pm2 || true
          
          # Deploy with PM2 - use direct start instead of ecosystem file
          pm2 stop stream-scene || true
          pm2 delete stream-scene || true
          pm2 start dist/server/app.js --name stream-scene --env production
          pm2 save
